#!/bin/bash
#
#
#
#
#
#Blah first run, about, menu.
#
#
## IS LOCKED
IS_LOCKED=$(ls | grep -c ".tar.gz.gpg")
  if [[ "$IS_LOCKED" -gt "0" ]]; then
      echo "---------------------------------------"
      echo "| L O C K E D   K e y R N G   M E N U |"
      echo "---------------------------------------"
      PS3='Enter choice (press enter to see options again): '
      options=("Unlock KeyRNG Files" "Copy Encrypted Files For Backup" "About Locked File" "Quit")
      select opt in "${options[@]}"
      do
          case "$opt" in
              "Unlock KeyRNG Files")
unlock ()
{
gpg2 -d *.tar.gz.gpg > lock.KeyRNG.tar.gz
tar -xf lock.KeyRNG.tar.gz
chown -R "$USER" * */ */*
chmod 0600 gpg-KeyRNG/gpg.conf
echo "Shredding temp files..."
HAS_SRM=$(ls /usr/bin/ /usr/sbin/ /usr/local/bin/ /home/"$USER"/bin/ | grep -c srm)
if [[ "$HAS_SRM" -gt "0" ]]; then
    srm -drv *.tar.gz*
else
    shred -vuz *.tar.gz*
fi
}
                  unlock
                  . libkeyrng
                  break
                  ;;
              "Copy Encrypted Files For Backup")
                  echo "What would you like to name the backup copy?"
                  read BACKUP
                  echo "Copying..."
                  cp *.tar.gz.gpg /tmp/"$BACKUP".tar.gz.gpg
                  echo "File is at /tmp/"$BACKUP".tar.gz.gpg"
                  echo "You should move somewhere else if you would like to keep it."
                  echo "Press enter to exit."
                  read
                  exit 0
                  ;;
              "About Locked File")
                  echo "---------------------------------------------------------------------"
                  echo "| Permissions |    Owner    | Size |   Date   |      Filename       |"
                  echo "---------------------------------------------------------------------"
                  ls -lh *.tar.gz.gpg
                  ;;
              "Quit")
                  exit 0
                  ;;
          esac
      done
## FIRST RUN
  else
      . libkeyrng
      IS_FIRST_RUN=$(ls gpg-KeyRNG | grep -c "secring")
      if [ "$IS_FIRST_RUN" -lt "1" ]; then
          echo "---------------------"
          echo "| F I R S T   R U N |"
          echo "---------------------"
          echo "This is your first run."
          echo "You must create a gpg key to begin with."
          echo "Press enter to move on."
          read
          clear
          firstrun
      fi
  fi
## TEMP FILE
HAS_TEMP_FILE=$(ls | grep -c "temp")
if [ "$HAS_TEMP_FILE" -lt "1" ]; then
    mkdir temp/
fi
## MAIN MENU 
clear
echo "---------------------"
echo "| M A I N   M E N U |"
echo "---------------------"
PS3='Enter choice (press enter to see options again): '
options=("GnuPG Management" "Bitcoin Addresses" "LOCK UP!" "Quit")
select opt in "${options[@]}"
do
    case "$opt" in
        "GnuPG Management")
            clear
            echo "------------"
            echo "| GPG MENU |"
            echo "------------"
            PS3='Enter choice (press enter to see options again): '
            options=("Key Management" "Encryption" "Decryption" "LOCK UP!" "Back To MAIN MENU" "Quit")
            select opt in "${options[@]}"
            do
                case "$opt" in
                    "Key Management")
                        clear
                        echo "-------------------------------"
                        echo "| K E Y   M A N A G E M E N T |"
                        echo "-------------------------------"
                        PS3='Enter choice (press enter to see options again): '
                        options=("Generate New Keypair" "Public Keys" "Secret Keys" "LOCK UP!" "Back To GPG MENU" "Quit")
                        select opt in "${options[@]}"
                        do
                            case "$opt" in
                                "Generate New Keypair")
                                    genkey
                                    ;;
                                "Public Keys")
                                    clear
                                    echo "-------------------------"
                                    echo "| P U B L I C   K E Y S |"
                                    echo "-------------------------"
                                    PS3='Enter choice (press enter to see options again): '
                                    options=("List Public Keys By UID" "List Full Public Keys" "Import Keys" "Export A Public Key To Terminal" "Export A Public Key To File" "Send Keys To Keyserver" "Receive Keys From Keyserver" "LOCK UP!" "Back To KEY MANAGEMENT MENU" "Quit")
                                    select opt in "${options[@]}"
                                    do
                                        case "$opt" in
                                            "List Public Keys By UID")
                                                listkeyuids
                                                ;;
                                            "List Full Public Keys")
                                                listfullkeydetails
                                                ;;
                                            "Import Keys")
                                                clear
                                                echo "------------------------"
                                                echo "| I M P O R T   K E Y S|"
                                                echo "------------------------"
                                                PS3='Enter choice (press enter to see options again): '
                                                options=("Import From File" "Import From Clipboard" "Import From Another GPG" "LOCK UP!" "Back To PUBLIC KEYS MENU" "Quit")
                                                select opt in "${options[@]}"
                                                do
                                                    case "$opt" in
                                                        "Import From File")
                                                            importkeyfile
                                                            ;;
                                                        "Import From Clipboard")
                                                            importkeyclip
                                                            ;;
                                                        "Import From Another GPG")
                                                            importkeyfromgpg
                                                            ;;
                                                        "LOCK UP!")
                                                            lockup
                                                            ;;
                                                        "Back To PUBLIC KEYS MENU")
                                                            break
                                                            ;;
                                                        "Quit")
                                                            badquit
                                                            ;;
                                                        *) echo "Invalid Option";;
                                                    esac
                                                done
                                                ;;
                                            "Export A Public Key To Terminal")
                                                exportpubkey
                                                ;;
                                            "Export A Public Key To File")
                                                exportpubkeyfile
                                                ;;
                                            "Send Keys To Keyserver")
                                                sendkeyserv
                                                ;;
                                            "Receive Keys From Keyserver")
                                                recvkeyserv
                                                ;;
                                            "LOCK UP!")
                                                lockup
                                                ;;
                                            "Back To KEY MANAGEMENT MENU")
                                                break
                                                ;;
                                            "Quit")
                                                badquit
                                                ;;
                                            *) echo "Invalid Option";;
                                        esac
                                    done
                                    ;;
                                "Secret Keys")
                                    clear
                                    echo "-------------------------"
                                    echo "| S E C R E T   K E Y S |"
                                    echo "-------------------------"
                                    PS3='Enter choice (press enter to see options again): '
                                    options=("List Secret Keys By UID" "List Full Secret Key Info" "Export Secret Key To Terminal" "Export Secret Key To File" "LOCK UP!" "Back To KEY MANAGEMENT MENU" "Quit")
                                    select opt in "${options[@]}"
                                    do
                                        case "$opt" in
                                        "List Secret Keys By UID")
                                            listseckeyuid
                                            ;;
                                        "List Full Secret Key Info")
                                            listfullseckey
                                            ;;
                                        "Export Secret Key To Terminal")
                                            exportseckey
                                            ;;
                                        "Export Secret Key To File")
                                            exportseckeyfile
                                            ;;
                                        "LOCK UP!")
                                            lockup
                                            ;;
                                        "Back To KEY MANAGEMENT MENU")
                                            break
                                            ;;
                                        "Quit")
                                            badquit
                                            ;;
                                        *) echo "Invalid Option";;
                                        esac
                                    done
                                    ;;
                                "LOCK UP!")
                                    lockup
                                    ;;
                                "Back To GPG MENU")
                                    break
                                    ;;
                                "Quit")
                                    badquit
                                    ;;
                                *) echo "Invalid Option";;
                            esac
                        done
                        ;;
                    "Encryption")
                        clear
                        echo "---------------------------------"
                        echo "| E N C R Y P T I O N   M E N U |"
                        echo "---------------------------------"
                        PS3='Enter choice (press enter to see options again): '
                        options=("Encrypt A File" "Encrypt A New Message" "LOCK UP!" "Back To GPG MENU" "Quit")
                        select opt in "${options[@]}"
                        do
                            case "$opt" in
                                "Encrypt A File")
                                    encryptfile
                                    ;;
                                "Encrypt A New Message")
                                    encryptnewmsg
                                    ;;
                                "LOCK UP!")
                                    lockup
                                    ;;
                                "Back To GPG MENU")
                                    break
                                    ;;
                                "Quit")
                                    badquit
                                    ;;
                                *) echo "Invalid Option";;
                            esac
                        done
                        ;;
                    "Decryption")
                        clear
                        echo "---------------------------------"
                        echo "| D E C R Y P T I O N   M E N U |"
                        echo "---------------------------------"
                        PS3='Enter choice (press enter to see options again): '
                        options=("Decrypt From A File" "Decrypt From Clipboard" "LOCK UP!" "Back To GPG MENU" "Quit")
                        select opt in "${options[@]}"
                        do
                            case "$opt" in
                                "Decrypt From A File")
                                    decryptfile
                                    ;;
                                "Decrypt From Clipboard")
                                    decryptclip
                                    ;;
                                "LOCK UP!")
                                    lockup
                                    ;;
                                "Back To GPG MENU")
                                    break
                                    ;;
                                "Quit")
                                    badquit
                                    ;;
                                *) echo "Invalid Option";;
                            esac
                        done
                        ;;
                    "LOCK UP!")
                        lockup
                        ;;
                    "Back To MAIN MENU")
                        break
                        ;;
                    "Quit")
                        badquit
                        ;;
                    *) echo "Invalid option";;
                esac
            done
            ;;
        "Bitcoin Addresses")
            HAS_BTCFILE=$(ls | grep -c "btc-KeyRNG")
            if [ "$HAS_BTCFILE" -lt "1" ]; then
                mkdir btc-KeyRNG
                chown "$USER" btc-KeyRNG/
            fi
            ENC_ADDRFILE=$(ls btc-KeyRNG | grep -c "addr.gpg")
            if [ "$ENC_ADDRFILE" -gt "0" ]; then
                echo "Address file is locked."
                echo "Press enter to decrypt."
                read
                gpg2 --output btc-KeyRNG/addr --decrypt btc-KeyRNG/addr.gpg
                echo "Shredding old file."
                DEL=btc-KeyRNG/addr.gpg
                secdelete
            fi
            clear
            echo "---------------------------"
            echo "| B I T C O I N   M E N U |"
            echo "---------------------------"
            PS3='Enter option (press enter to see options again): '
            options=("Standard Addresses" "Electrum Seed Addresses" "BIP32 Seed Addresses" "Back To MAIN MENU" "LOCK UP!" "Quit")
            select opt in "${options[@]}"
            do
                case "$opt" in
                    "Standard Addresses")
                    clear
                    echo "---------------------------------------------"
                    echo "| S T A N D A R D   A D D R E S S   M E N U |"
                    echo "---------------------------------------------"
                    PS3='Enter option (press enter to see options again): '
                    options=("Create New Address" "List Addresses" "See All Addresses/Keys" "LOCK UP!" "Back To BITCOIN MENU" "Quit")
                    select opt in "${options[@]}"
                    do
                        case "$opt" in
                            "Create New Address")
                                getnewaddress
                                ;;
                            "List Addresses")
                                showaddr
                                ;;
                            "See All Addresses/Keys")
                                showalladdr
                                ;;
                            "LOCK UP!")
                                lockup
                                ;;
                            "Back To MAIN MENU")
                                break
                                ;;
                            "Quit")
                                badquit
                                ;;
                            *) echo "Invalid Option";;
                        esac
                    done
                    ;;
                    "Electrum Seed Addresses")
                    ;;
                    "BIP32 Seed Addresses")
                    ;;
                    "Back To BITCOIN MENU")
                    ;;
                    "LOCK UP!")
                    ;;
                    "Quit")
                    ;;
                    *) echo "Invalid Option";;
                 esac
             done
             ;;
        "LOCK UP!")
            lockup
            ;;    
        "Quit")
            badquit
            ;;
        *) echo "Invalid Option";;
    esac
done
